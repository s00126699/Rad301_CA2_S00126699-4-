@model S00126699_CA2.Models.Movie

@{
    ViewBag.Title = " Movie Details";
}

<h2>Movie Details</h2>
<div class="btn-group" data-toggle="buttons">
    <label class="btn btn-info btn-group-sm ">
        <span class="glyphicon glyphicon-arrow-left"></span>
        @Html.ActionLink("Return to Movie Menu", "Index")
    </label>
    </div>

    <div class="table-responsive">
        <table class="table table-striped">
            <tr>
                <th><b>Movie Name:</b> @*@Html.DisplayFor(model => model.MoviesName)*@</th>
                <th><b>Movie Descritpion:</b> @*@Html.DisplayFor(model => model.MoviesName)*@</th>
                <th></th>
            </tr>

            <tr>
                <td>
                   <i> @Html.DisplayFor(model => model.MoviesName)</i>
                </td>
                <td>
                   <i> @Html.DisplayFor(model => model.Description)</i>
                </td>
                <td>@*<button class="btn btn-xs btn-info"><a style="color: white;" href="@Url.Action("Edit", new { id = Model.MovieID })">Edit </a></button>*@
            </tr>
        </table>
    </div>
    <p>
        @Html.ActionLink("Add Actor To Movie", "Create", "Actor", new { movieID = Model.MovieID }, new { @class = "btn btn-primary" })
    </p>
    @if (Model.Actors != null)
    {
        <h5>@Model.MoviesName has @Model.Actors.Count() Actors</h5>
        <div class="table">
            <table class="table table-striped">
                <tr>
                    <th>
                        Template: X is an actor in Y and played Z.
                    </th>
                <tr>
                    <td>
                        @foreach (var mov in Model.Actors)
                        {
                            <p>
                                @Html.DisplayFor(modelItem => mov.ActorsName) is an actor in  @Html.DisplayFor(model => model.MoviesName) and played @Html.DisplayFor(modelItem => mov.ScreenName).
                                @Html.ActionLink("Delete", "Delete", "Actor", new { id = mov.ActorID }, new { @class = "btn btn-danger btn-xs" })
                                @*<button class="btn btn-xs btn-info">@Html.ActionLink("Edit", "Edit", new { id = mov.ActorID })</button>*@
                                @*@Html.ActionLink("Edit", "Edit", "Actor", new { id = mov.ActorID }, new { @class = "btn btn-edit btn-xs" })*@
                                @*<button class="btn btn-xs btn-info"><a style="color: white;" href="@Url.Action("Edit", "Actors", new { id = mov.MovieID })"><span style="color:white;" class="glyphicon glyphicon-pencil"></span> Edit </a></button>*@
                                @*@Html.ActionLink("Edit Actors", "Edit", "Actor", null)*@
                                @*@Html.ActionLink("Edit", "Edit","Actor", null, new { @class = "btn btn-primary" })*@
                            </p>
                        }
                    </td>
                </tr>

            </table>
        </div>
    }
    else
    {
        <p class="alert alert-info">No actors found!!</p>

        <p>
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
